kubectl get pods -A
kubectl get nodes

kubectl run nginx --image=nginx



cd /etc/kubernetes
ls
admin.conf               kubelet.conf  pki             super-admin.conf
controller-manager.conf  manifests     scheduler.conf

this admin.config is responsible for communicating pods and nodes

cluster se communicate kaise karte hai
cd ~/.kube       
pwd
/root/.kube
ls


content of kube config
cluster
context:-
user


instead of kubectl we can use endpoint 
that interact with each other 
using Rest APIS


ðŸš€Deployment is a kind there can be more such kinds
and when called by curl/Rest API ---> then it is a resource
if core services then --> empty group --> v1


GVK --> Group version kind
if kind :- pod
then core group empty so version is --> v1
if kind :- networking
then core group empty so version is --> v1

GVR --> Group version resource

ðŸš€ create service account --> this is nothing but a user
steps are in github repo 
we are creating using rest api
therefore it is known as resource

ðŸš€Clusters

har ek cluster ki details
that is object
har ek context ke andar 
ye hai
everything is key-value pair
syntax imp

Specs -- Containers 
can be single or can be multiple

kind:- ConfigMap
agar eksath muliplt line then
{{}}
or pipe |

if we want to combine out 2 yaml files then use
---

ðŸš€init container
if we this then they run properly in a sequentcial manner
init container always run to --> completion
these are defined because before the main application container run these are runned frist
and to check whether a file or service exist or not
create a init container
in that add 2 init contiane ad then a main
the mian will slepp untill these two are run

how it differs from sidecar contains
--> init can contain diff image
init containers are not continuously running alongside the main
do not support lifecycle, livenessProbe

ðŸš€kubernetes object job -- padh lena

ðŸš€Multi-container Pod with -- Side car Container

suppose 2 (both share common resources)
1 main container     ->  
1 side car container ->  
that can be log container   --> 
that can be Proxy container --> first request goes to sidecar then after authentication goes
                                to main container


ðŸš€Service Mesh --> padh lena 
infrastructure layer that manages communication between microservices
Provides an interface for operators to define policies for traffic management
also use full in pod -- pod communication using side car container
isse -->security heal check sab ho jata hai

pod disrupting 






